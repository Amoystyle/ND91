/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class daemon_provider_file_FileJni */

#ifndef _Included_daemon_provider_file_FileJni
#define _Included_daemon_provider_file_FileJni
#ifdef __cplusplus
extern "C" {
#endif
	JNIEXPORT void JNICALL Java_daemon_provider_file_FileJni_initLog
		(JNIEnv* env, jclass cls);

    /*
     * Class:     daemon_provider_file_FileJni
     * Method:    getDirInfo
     * Signature: (Ljava/lang/String;)[B
     */
    JNIEXPORT jbyteArray JNICALL Java_daemon_provider_file_FileJni_getDirInfo
    (JNIEnv* env, jclass cls, jstring path);

	JNIEXPORT jbyteArray JNICALL Java_daemon_provider_file_FileJni_getDirInfoSubWritable
	(JNIEnv * env, jclass cls, jstring path);

    /*
     * Class:     daemon_provider_file_FileJni
     * Method:    makeDir
     * Signature: (Ljava/lang/String;)[B
     */
    JNIEXPORT jbyteArray JNICALL Java_daemon_provider_file_FileJni_makeDir
    (JNIEnv* env, jclass cls, jstring path);

    /*
     * Class:     daemon_provider_file_FileJni
     * Method:    remove
     * Signature: (Ljava/lang/String;)[B
     */
    JNIEXPORT jbyteArray JNICALL Java_daemon_provider_file_FileJni_remove
    (JNIEnv* env, jclass cls, jstring path);

    /*
     * Class:     daemon_provider_file_FileJni
     * Method:    move
     * Signature: (Ljava/lang/String;Ljava/lang/String;)[B
     */
    JNIEXPORT jbyteArray JNICALL Java_daemon_provider_file_FileJni_move
    (JNIEnv* env, jclass cls, jstring pathOld, jstring pathNew);

    /*
     * Class:     daemon_provider_file_FileJni
     * Method:    copy
     * Signature: (Ljava/lang/String;Ljava/lang/String;)[B
     */
    JNIEXPORT jbyteArray JNICALL Java_daemon_provider_file_FileJni_copy
    (JNIEnv* env, jclass cls, jstring pathOld, jstring pathNew);

    /*
     * Class:     daemon_provider_file_FileJni
     * Method:    getFileInfo
     * Signature: (Ljava/lang/String;)[B
     */
    JNIEXPORT jbyteArray JNICALL Java_daemon_provider_file_FileJni_getFileAttr
    (JNIEnv* env, jclass cls, jstring path);

	JNIEXPORT jbyteArray JNICALL Java_daemon_provider_file_FileJni_getFileAttrWritable
	(JNIEnv * env, jclass cls, jstring path);

    /*
     * Class:     daemon_provider_file_FileJni
     * Method:    chmod
     * Signature: (Ljava/lang/String;I)[B
     */
    JNIEXPORT jbyteArray JNICALL Java_daemon_provider_file_FileJni_chmod
    (JNIEnv* env, jclass cls, jstring path);

#ifdef __cplusplus
}
#endif
#endif
