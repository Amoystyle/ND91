#include "stdafx.h"
#ifdef MODULE_IPOD

#include "Ios5ItemExtraDB.h"

DItemextra5::DItemextra5()
{
	item_pid=0;		 //¸èÇúpid
	title=L"";
	sort_title=L"";
	disc_count=0;
	track_count=0;
	artwork_cache_id=0;
	location_type=0;
	location=L"";
	extension=0;
	date_created=0;
	file_size=0;
	file_creator=0;
	file_type=0;
	num_dir_levels_file=0;
	num_dir_levels_lib=0;
	integrity="";
	media_kind=0;
	date_modified=0;
	year=0;
	content_rating=0;
	content_rating_level=0;
	is_user_disabled=0;
	remember_bookmark=0;
	exclude_from_shuffle=0;
	start_time_ms=0;
	stop_time_ms=0;
	total_time_ms=0;
	total_burn_time_ms=0;
	bpm=0;
	relative_volume=0;
	eq_preset=L"";
	genius_id=0;
	comment=L"";
	grouping=L"";
	description=L"";
	description_long=L"";
	collection_description=L"";
	is_ota_purchased=0;
	is_compilation=0;
	is_itunes_u=0;
	is_audible_audio_book=0;
	copyright=L"";
	chosen_by_auto_fill=0;
	is_temporary_cloud_download=0;
	is_podcast=0;
	external_guid=L"";
	feed_url=L"";
	store_kind=0;
	date_purchased=0;
	date_released=0;
	account_id=0;
	key_versions=0;
	key_platform_id=0;
	key_id=0;
	store_item_id=0;
	store_artist_id=0;
	store_composer_id=0;
	store_genre_id=0;
	store_playlist_id=0;
	storefront_id=0;
	redownload_action_params=L"";
	artwork_url=L"";
	store_xid=L"";
	store_flavor=L"";
	store_saga_id=0;
	store_matched_status=0;
	store_redownloaded_status=0;
	audio_format=0;
	sample_rate=0;
	duration=0;
	gapless_heuristic_info=0;
	gapless_encoding_delay=0;
	gapless_encoding_drain=0;
	gapless_last_frame_resynch=0;
	analysis_inhibit_flags=0;
	audio_fingerprint=0;
	volume_normalization_energy=0;
	is_rental=0;
	is_demo=0;
	rental_duration=0;
	rental_playback_duration=0;
	rental_playback_date_started=0;
	rental_date_started=0;
	has_alternate_audio=0;
	has_subtitles=0;
	is_hd=0;
	season_number=0;
	audio_language=0;
	audio_track_index=0;
	audio_track_id=0;
	subtitle_language=0;
	subtitle_track_index=0;
	subtitle_track_id=0;
	episode_id=L"";
	network_name=L"";
	extended_content_rating=L"";
	movie_info=L"";
	bit_rate=0;
	pending_genius_checksum=0;
}
wstring DItemextra5::GetTableName()
{
	return L"item_extra";
}
DItemextra5* DItemextra5::FromValue(const vector<const char*>* pValues)
{
	DItemextra5* p = new DItemextra5();
	int i = 0;	
	p->item_pid=_atoi64(pValues->at(i++));		 //¸èÇúpid
	p->title=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->sort_title=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->disc_count=atoi(pValues->at(i++));
	p->track_count=atoi(pValues->at(i++));
	p->artwork_cache_id=atoi(pValues->at(i++));
	p->location_type=atoi(pValues->at(i++));
	p->location=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->extension=atoi(pValues->at(i++));
	p->date_created=atoi(pValues->at(i++));
	p->file_size=atoi(pValues->at(i++));
	p->file_creator=atoi(pValues->at(i++));
	p->file_type=atoi(pValues->at(i++));
	p->num_dir_levels_file=atoi(pValues->at(i++));
	p->num_dir_levels_lib=atoi(pValues->at(i++));
	p->integrity=pValues->at(i++);
	p->media_kind=atoi(pValues->at(i++));
	p->date_modified=atoi(pValues->at(i++));
	p->year=atoi(pValues->at(i++));
	p->content_rating=atoi(pValues->at(i++));
	p->content_rating_level=atoi(pValues->at(i++));
	p->is_user_disabled=atoi(pValues->at(i++));
	p->remember_bookmark=atoi(pValues->at(i++));
	p->exclude_from_shuffle=atoi(pValues->at(i++));
	p->start_time_ms=atoi(pValues->at(i++));
	p->stop_time_ms=atoi(pValues->at(i++));
	p->total_time_ms=atoi(pValues->at(i++));
	p->total_burn_time_ms=atoi(pValues->at(i++));
	p->bpm=atoi(pValues->at(i++));
	p->relative_volume=atoi(pValues->at(i++));
	p->eq_preset=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->genius_id=atoi(pValues->at(i++));
	p->comment=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->grouping=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->description=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->description_long=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->collection_description=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->is_ota_purchased=atoi(pValues->at(i++));
	p->is_compilation=atoi(pValues->at(i++));
	p->is_itunes_u=atoi(pValues->at(i++));
	p->is_audible_audio_book=atoi(pValues->at(i++));
	p->copyright=atoi(pValues->at(i++));
	p->chosen_by_auto_fill=atoi(pValues->at(i++));
	p->is_temporary_cloud_download=atoi(pValues->at(i++));
	p->is_podcast=atoi(pValues->at(i++));
	p->external_guid=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->feed_url=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->store_kind=atoi(pValues->at(i++));
	p->date_purchased=atoi(pValues->at(i++));
	p->date_released=atoi(pValues->at(i++));
	p->account_id=atoi(pValues->at(i++));
	p->key_versions=atoi(pValues->at(i++));
	p->key_platform_id=atoi(pValues->at(i++));
	p->key_id=atoi(pValues->at(i++));
	p->store_item_id=atoi(pValues->at(i++));
	p->store_artist_id=atoi(pValues->at(i++));
	p->store_composer_id=atoi(pValues->at(i++));
	p->store_genre_id=atoi(pValues->at(i++));
	p->store_playlist_id=atoi(pValues->at(i++));
	p->storefront_id=atoi(pValues->at(i++));
	p->redownload_action_params=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->artwork_url=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->store_xid=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->store_flavor=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->store_saga_id=atoi(pValues->at(i++));
	p->store_matched_status=atoi(pValues->at(i++));
	p->store_redownloaded_status=atoi(pValues->at(i++));
	p->audio_format=atoi(pValues->at(i++));
	p->sample_rate=atoi(pValues->at(i++));
	p->duration=atoi(pValues->at(i++));
	p->gapless_heuristic_info=atoi(pValues->at(i++));
	p->gapless_encoding_delay=atoi(pValues->at(i++));
	p->gapless_encoding_drain=atoi(pValues->at(i++));
	p->gapless_last_frame_resynch=atoi(pValues->at(i++));
	p->analysis_inhibit_flags=atoi(pValues->at(i++));
	p->audio_fingerprint=atoi(pValues->at(i++));
	p->volume_normalization_energy=atoi(pValues->at(i++));
	p->is_rental=atoi(pValues->at(i++));
	p->is_demo=atoi(pValues->at(i++));
	p->rental_duration=atoi(pValues->at(i++));
	p->rental_playback_duration=atoi(pValues->at(i++));
	p->rental_playback_date_started=atoi(pValues->at(i++));
	p->rental_date_started=atoi(pValues->at(i++));
	p->has_alternate_audio=atoi(pValues->at(i++));
	p->has_subtitles=atoi(pValues->at(i++));
	p->is_hd=atoi(pValues->at(i++));
	p->season_number=atoi(pValues->at(i++));
	p->audio_language=atoi(pValues->at(i++));
	p->audio_track_index=atoi(pValues->at(i++));
	p->audio_track_id=atoi(pValues->at(i++));
	p->subtitle_language=atoi(pValues->at(i++));
	p->subtitle_track_index=atoi(pValues->at(i++));
	p->subtitle_track_id=atoi(pValues->at(i++));
	p->episode_id=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->network_name=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->extended_content_rating=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->movie_info=CCodeOperation::UTF_8ToUnicode(pValues->at(i++));
	p->bit_rate=atoi(pValues->at(i++));
	p->pending_genius_checksum=atoi(pValues->at(i++));
	return p;
}

void DItemextra5::GetColumns(vector<wstring>& vector)
{
	vector.push_back(L"item_pid");		 //¸èÇúpid
	vector.push_back(L"title");
	vector.push_back(L"sort_title");
	vector.push_back(L"disc_count");
	vector.push_back(L"track_count");
	vector.push_back(L"artwork_cache_id");
	vector.push_back(L"location_type");
	vector.push_back(L"location");
	vector.push_back(L"extension");
	vector.push_back(L"date_created");
	vector.push_back(L"file_size");
	vector.push_back(L"file_creator");
	vector.push_back(L"file_type");
	vector.push_back(L"num_dir_levels_file");
	vector.push_back(L"num_dir_levels_lib");
	vector.push_back(L"integrity");
	vector.push_back(L"media_kind");
	vector.push_back(L"date_modified");
	vector.push_back(L"year");
	vector.push_back(L"content_rating");
	vector.push_back(L"content_rating_level");
	vector.push_back(L"is_user_disabled");
	vector.push_back(L"remember_bookmark");
	vector.push_back(L"exclude_from_shuffle");
	vector.push_back(L"start_time_ms");
	vector.push_back(L"stop_time_ms");
	vector.push_back(L"total_time_ms");
	vector.push_back(L"total_burn_time_ms");
	vector.push_back(L"bpm");
	vector.push_back(L"relative_volume");
	vector.push_back(L"eq_preset");
	vector.push_back(L"genius_id");
	vector.push_back(L"comment");
	vector.push_back(L"grouping");
	vector.push_back(L"description");
	vector.push_back(L"description_long");
	vector.push_back(L"collection_description");
	vector.push_back(L"is_ota_purchased");
	vector.push_back(L"is_compilation");
	vector.push_back(L"is_itunes_u");
	vector.push_back(L"is_audible_audio_book");
	vector.push_back(L"copyright");
	vector.push_back(L"chosen_by_auto_fill");
	vector.push_back(L"is_temporary_cloud_download");
	vector.push_back(L"is_podcast");
	vector.push_back(L"external_guid");
	vector.push_back(L"feed_url");
	vector.push_back(L"store_kind");
	vector.push_back(L"date_purchased");
	vector.push_back(L"date_released");
	vector.push_back(L"account_id");
	vector.push_back(L"key_versions");
	vector.push_back(L"key_platform_id");
	vector.push_back(L"key_id");
	vector.push_back(L"store_item_id");
	vector.push_back(L"store_artist_id");
	vector.push_back(L"store_composer_id");
	vector.push_back(L"store_genre_id");
	vector.push_back(L"store_playlist_id");
	vector.push_back(L"storefront_id");
	vector.push_back(L"redownload_action_params");
	vector.push_back(L"artwork_url");
	vector.push_back(L"store_xid");
	vector.push_back(L"store_flavor");
	vector.push_back(L"store_saga_id");
	vector.push_back(L"store_matched_status");
	vector.push_back(L"store_redownloaded_status");
	vector.push_back(L"audio_format");
	vector.push_back(L"sample_rate");
	vector.push_back(L"duration");
	vector.push_back(L"gapless_heuristic_info");
	vector.push_back(L"gapless_encoding_delay");
	vector.push_back(L"gapless_encoding_drain");
	vector.push_back(L"gapless_last_frame_resynch");
	vector.push_back(L"analysis_inhibit_flags");
	vector.push_back(L"audio_fingerprint");
	vector.push_back(L"volume_normalization_energy");
	vector.push_back(L"is_rental");
	vector.push_back(L"is_demo");
	vector.push_back(L"rental_duration");
	vector.push_back(L"rental_playback_duration");
	vector.push_back(L"rental_playback_date_started");
	vector.push_back(L"rental_date_started");
	vector.push_back(L"has_alternate_audio");
	vector.push_back(L"has_subtitles");
	vector.push_back(L"is_hd");
	vector.push_back(L"season_number");
	vector.push_back(L"audio_language");
	vector.push_back(L"audio_track_index");
	vector.push_back(L"audio_track_id");
	vector.push_back(L"subtitle_language");
	vector.push_back(L"subtitle_track_index");
	vector.push_back(L"subtitle_track_id");
	vector.push_back(L"episode_id");
	vector.push_back(L"network_name");
	vector.push_back(L"extended_content_rating");
	vector.push_back(L"movie_info");
	vector.push_back(L"bit_rate");
	vector.push_back(L"pending_genius_checksum");
}
const vector<wstring>* const DItemextra5::GetValues()
{
	vector<wstring>* pVector = GetVector();
	pVector->push_back(Int64ToStr(item_pid));		 //¸èÇúpid
	pVector->push_back(ConvertStr(title));
	pVector->push_back(ConvertStr(sort_title));
	pVector->push_back(Int32ToStr(disc_count));
	pVector->push_back(Int32ToStr(track_count));
	pVector->push_back(Int32ToStr(artwork_cache_id));
	pVector->push_back(Int32ToStr(location_type));
	pVector->push_back(ConvertStr(location));
	pVector->push_back(Int32ToStr(extension));
	pVector->push_back(Int32ToStr(date_created));
	pVector->push_back(Int32ToStr(file_size));
	pVector->push_back(Int32ToStr(file_creator));
	pVector->push_back(Int32ToStr(file_type));
	pVector->push_back(Int32ToStr(num_dir_levels_file));
	pVector->push_back(Int32ToStr(num_dir_levels_lib));
	pVector->push_back(BinToStr(integrity));
	pVector->push_back(Int32ToStr(media_kind));
	pVector->push_back(Int32ToStr(date_modified));
	pVector->push_back(Int32ToStr(year));
	pVector->push_back(Int32ToStr(content_rating));
	pVector->push_back(Int32ToStr(content_rating_level));
	pVector->push_back(Int32ToStr(is_user_disabled));
	pVector->push_back(Int32ToStr(remember_bookmark));
	pVector->push_back(Int32ToStr(exclude_from_shuffle));
	pVector->push_back(Int32ToStr(start_time_ms));
	pVector->push_back(Int32ToStr(stop_time_ms));
	pVector->push_back(Int32ToStr(total_time_ms));
	pVector->push_back(Int32ToStr(total_burn_time_ms));
	pVector->push_back(Int32ToStr(bpm));
	pVector->push_back(Int32ToStr(relative_volume));
	pVector->push_back(ConvertStr(eq_preset));
	pVector->push_back(Int32ToStr(genius_id));
	pVector->push_back(ConvertStr(comment));
	pVector->push_back(ConvertStr(grouping));
	pVector->push_back(ConvertStr(description));
	pVector->push_back(ConvertStr(description_long));
	pVector->push_back(ConvertStr(collection_description));
	pVector->push_back(Int32ToStr(is_ota_purchased));
	pVector->push_back(Int32ToStr(is_compilation));
	pVector->push_back(Int32ToStr(is_itunes_u));
	pVector->push_back(Int32ToStr(is_audible_audio_book));
	pVector->push_back(ConvertStr(copyright));
	pVector->push_back(Int32ToStr(chosen_by_auto_fill));
	pVector->push_back(Int32ToStr(is_temporary_cloud_download));
	pVector->push_back(Int32ToStr(is_podcast));
	pVector->push_back(ConvertStr(external_guid));
	pVector->push_back(ConvertStr(feed_url));
	pVector->push_back(Int32ToStr(store_kind));
	pVector->push_back(Int32ToStr(date_purchased));
	pVector->push_back(Int32ToStr(date_released));
	pVector->push_back(Int32ToStr(account_id));
	pVector->push_back(Int32ToStr(key_versions));
	pVector->push_back(Int32ToStr(key_platform_id));
	pVector->push_back(Int32ToStr(key_id));
	pVector->push_back(Int32ToStr(store_item_id));
	pVector->push_back(Int32ToStr(store_artist_id));
	pVector->push_back(Int32ToStr(store_composer_id));
	pVector->push_back(Int32ToStr(store_genre_id));
	pVector->push_back(Int32ToStr(store_playlist_id));
	pVector->push_back(Int32ToStr(storefront_id));
	pVector->push_back(ConvertStr(redownload_action_params));
	pVector->push_back(ConvertStr(artwork_url));
	pVector->push_back(ConvertStr(store_xid));
	pVector->push_back(ConvertStr(store_flavor));
	pVector->push_back(Int32ToStr(store_saga_id));
	pVector->push_back(Int32ToStr(store_matched_status));
	pVector->push_back(Int32ToStr(store_redownloaded_status));
	pVector->push_back(Int32ToStr(audio_format));
	pVector->push_back(Int32ToStr(sample_rate));
	pVector->push_back(Int32ToStr(duration));
	pVector->push_back(Int32ToStr(gapless_heuristic_info));
	pVector->push_back(Int32ToStr(gapless_encoding_delay));
	pVector->push_back(Int32ToStr(gapless_encoding_drain));
	pVector->push_back(Int32ToStr(gapless_last_frame_resynch));
	pVector->push_back(Int32ToStr(analysis_inhibit_flags));
	pVector->push_back(Int32ToStr(audio_fingerprint));
	pVector->push_back(Int32ToStr(volume_normalization_energy));
	pVector->push_back(Int32ToStr(is_rental));
	pVector->push_back(Int32ToStr(is_demo));
	pVector->push_back(Int32ToStr(rental_duration));
	pVector->push_back(Int32ToStr(rental_playback_duration));
	pVector->push_back(Int32ToStr(rental_playback_date_started));
	pVector->push_back(Int32ToStr(rental_date_started));
	pVector->push_back(Int32ToStr(has_alternate_audio));
	pVector->push_back(Int32ToStr(has_subtitles));
	pVector->push_back(Int32ToStr(is_hd));
	pVector->push_back(Int32ToStr(season_number));
	pVector->push_back(Int32ToStr(audio_language));
	pVector->push_back(Int32ToStr(audio_track_index));
	pVector->push_back(Int32ToStr(audio_track_id));
	pVector->push_back(Int32ToStr(subtitle_language));
	pVector->push_back(Int32ToStr(subtitle_track_index));
	pVector->push_back(Int32ToStr(subtitle_track_id));
	pVector->push_back(ConvertStr(episode_id));
	pVector->push_back(ConvertStr(network_name));
	pVector->push_back(ConvertStr(extended_content_rating));
	pVector->push_back(ConvertStr(movie_info));
	pVector->push_back(Int32ToStr(bit_rate));
	pVector->push_back(Int32ToStr(pending_genius_checksum));
	return pVector;
}
wstring DItemextra5::PrimaryKeyCondition() const
{
	wostringstream woss; 
	woss<<" item_pid = "<<item_pid;
	return woss.str();
}



#endif